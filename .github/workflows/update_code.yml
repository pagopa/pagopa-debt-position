name: Update Code

on:
  issue_comment:
    types: [created, edited]


permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update:
    name: Update Openapi and Formatting
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.comment.body, 'update_code') }}
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          token: ${{ secrets.BOT_TOKEN_GITHUB }}

      - name: Checkout Pull Request
        run: hub pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK 17
        uses: actions/setup-java@b6e674f4b717d7b0ae3baee0fbe79f498905dfde # v1
        with:
          java-version: 17
          
      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Run Service on Docker
        shell: bash
        run: |
          cd ./docker
          chmod +x ./run_docker.sh
          ./run_docker.sh local

      - name: Update OpenApi/Swagger file
        run: |
          cd ./openapi
          chmod +x ./generate_openapi.sh
          ./generate_openapi.sh

      - name: Formatting
        uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--replace"
          commit-message: "Google Java format"

  notify:
    needs: [ update ]
    runs-on: ubuntu-latest
    name: Notify
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name: Notify if Failure
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # v6.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var comments = await github.rest.issues.listComments({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo
            });
            for (const comment of comments.data) {
              if (comment.body.includes('Update Code is failed. Please retry.')){
                github.rest.issues.deleteComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                })
              }
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Update Code is failed. Please retry.'
            })
            core.setFailed('Update Code is failed. Please retry.')
