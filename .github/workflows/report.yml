name: Report
on:
  schedule:
    - cron: '00 05 * * MON'

  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
          - prod
        default: prod

      notify: # todo
        description: 'notify report results'
        required: false
        type: boolean
        default: true

permissions:
  id-token: write
  contents: read
  deployments: write


jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/eng-github-actions-iac-template/tree/main/azure/github-self-hosted-runner-azure-create-action
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-create-action@main
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_RESOURCE_GROUP_NAME }} # RG of the runner
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}

  report:
    needs: [ create_runner, build ]
    runs-on: [ self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    name: Report generation
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Install dependencies
        run: |
          cd gpd-report
          go get .

      - name: Build
        run: |
          pwd
          cd gpd-report
          go build .

      - name: Run report go executable
        shell: bash
        run: |
          export SLACK_URL='${{ secrets.TEST_SLACK_URL }}'
          export DAYS=30
          # todo
          export PG_CONNECTION_STRING='${{ secrets.DATASOURCE_URL }}'
          ./go-sql

  cleanup_runner:
    name: Cleanup Runner
    needs: [ create_runner, report ]
    if: ${{ success() || failure() }}
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/eng-github-actions-iac-template/tree/main/azure/github-self-hosted-runner-azure-cleanup-action
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-cleanup-action@0ee2f58fd46d10ac7f00bce4304b98db3dbdbe9a
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          resource_group_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}
