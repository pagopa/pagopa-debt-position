name: DB migration

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to run DB migration
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
          - prod
      schema:                
        required: true
        type: choice
        description: Select the Schema to migrate
        options:
          - apd
          - odp
          - all

permissions:
  id-token: write
  contents: read

jobs:

  db_migration:
    runs-on: [ self-hosted-job, "${{ inputs.environment }}" ]
    name: DB migration
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up JDK 17
        uses: actions/setup-java@b6e674f4b717d7b0ae3baee0fbe79f498905dfde # v1
        with:
          java-version: 17

      - name: Set up Maven
        uses: stCarolas/setup-maven@07fbbe97d97ef44336b7382563d66743297e442f # v4.5
        with:
          maven-version: 3.8.2

      - name: Build project (compile resources)
        run: mvn -B clean compile

      # ============================
      # - Run Flyway
      # ============================  
      - name: Run Flyway Validate + Migrate
        shell: bash
        run: |
           set -euo pipefail
           export FLYWAY_DATASOURCE_URL='${{ secrets.FLYWAY_DATASOURCE_URL }}'
           export SPRING_DATASOURCE_USERNAME='${{ secrets.DATASOURCE_USERNAME }}'
           export SPRING_DATASOURCE_PASSWORD='${{ secrets.DATASOURCE_PASSWORD }}'
           CFG=gpdFlywayConfig.conf
           COMMON="-Dflyway.configFiles=${CFG} -Dflyway.validateMigrationNaming=true -Dflyway.cleanDisabled=true"

           if [[ "${{ inputs.schema }}" == "apd" ]]; then
              echo "▶ Running APD: validate..."
              export SCHEMA_NAME='${{ vars.APD_SCHEMA_NAME }}'
              mvn -B flyway:validate ${COMMON}
              echo "▶ Running APD: migrate..."
              mvn -B flyway:migrate ${COMMON}
            elif [[ "${{ inputs.schema }}" == "odp" ]]; then
                echo "▶ Running ODP: validate..."
                export SCHEMA_NAME='${{ vars.ODP_SCHEMA_NAME }}'
                mvn -B flyway:validate ${COMMON}
                echo "▶ Running ODP: migrate..."
                mvn -B flyway:migrate ${COMMON}
            else
                echo "▶ Running ALL: APD first"
                export SCHEMA_NAME='${{ vars.APD_SCHEMA_NAME }}'
                mvn -B flyway:validate ${COMMON}
                mvn -B flyway:migrate ${COMMON}
                echo "▶ Running ALL: ODP then"
                export SCHEMA_NAME='${{ vars.ODP_SCHEMA_NAME }}'
                mvn -B flyway:validate ${COMMON}
                mvn -B flyway:migrate ${COMMON}
            fi
