name: DB migration

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to run DB migration
        type: string
      target:
        required: true
        description: The environment target of the job
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
          - prod
          - all
      target:
        required: true
        type: choice
        description: Select the Environment Target
        options:
          - dev
          - uat
          - prod
          - all
      schema:                
        required: true
        type: choice
        description: Select the Schema to migrate
        options:
          - apd
          - odp
          - all

permissions:
  id-token: write
  contents: read

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    if: ${{ inputs.target == inputs.environment || inputs.target == 'all' }}
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/eng-github-actions-iac-template/tree/main/azure/github-self-hosted-runner-azure-create-action
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-create-action@159289e1e23d0783533d1dd83e1b7cf0a5a565d9 # v1.24.0
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_RESOURCE_GROUP_NAME }} # RG of the runner
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}
          self_hosted_runner_image_tag: "latest"

  db_migration:
    needs: [ create_runner ]
    runs-on: [ self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    if: ${{ inputs.target == inputs.environment || inputs.target == 'all' }}
    name: DB migration
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up JDK 17
        uses: actions/setup-java@b6e674f4b717d7b0ae3baee0fbe79f498905dfde # v1
        with:
          java-version: 17

      - name: Set up Maven
        uses: stCarolas/setup-maven@07fbbe97d97ef44336b7382563d66743297e442f # v4.5
        with:
          maven-version: 3.8.2

      - name: Build project (compile resources)
        run: mvn -B clean compile

      # ============================
      # - Run Flyway
      # ============================  
      - name: Run Flyway Migration
        shell: bash
        run: |
          export FLYWAY_DATASOURCE_URL='${{ secrets.FLYWAY_DATASOURCE_URL }}'
          export SPRING_DATASOURCE_USERNAME='${{ secrets.DATASOURCE_USERNAME }}'
          export SPRING_DATASOURCE_PASSWORD='${{ secrets.DATASOURCE_PASSWORD }}'

          if [[ "${{ inputs.schema }}" == "apd" ]]; then
            echo "▶ Running migration for schema APD..."
            export SCHEMA_NAME='${{ secrets.APD_SCHEMA_NAME }}'
            mvn flyway:migrate -Dflyway.configFiles=gpdFlywayConfig.conf
          elif [[ "${{ inputs.schema }}" == "odp" ]]; then
            echo "▶ Running migration for schema ODP..."
            export SCHEMA_NAME='${{ vars.ODP_SCHEMA_NAME }}'
            mvn flyway:migrate -Dflyway.configFiles=gpdFlywayConfig.conf 
          else
            echo "▶ Running migration for ALL schemas..."
            # APD
            export SCHEMA_NAME='${{ secrets.APD_SCHEMA_NAME }}'
            mvn flyway:migrate -Dflyway.configFiles=gpdFlywayConfig.conf
            # ODP
            export SCHEMA_NAME='${{ vars.ODP_SCHEMA_NAME }}'
            mvn flyway:migrate -Dflyway.configFiles=gpdFlywayConfig.conf                  
          fi

  cleanup_runner:
    name: Cleanup Runner
    needs: [ create_runner, db_migration ]
    if: ${{ success() || failure() && inputs.target == inputs.environment || inputs.target == 'all' }}
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/eng-github-actions-iac-template/tree/main/azure/github-self-hosted-runner-azure-cleanup-action
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-cleanup-action@0ee2f58fd46d10ac7f00bce4304b98db3dbdbe9a
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          resource_group_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}
