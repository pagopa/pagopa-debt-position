# info
application.name=@project.artifactId@
application.version=@project.version@
application.description=@project.description@
properties.environment=local


## Atomikos
com.atomikos.icatch.no_file=true
com.atomikos.icatch.console_log_level=DEBUG

apd.datasource.url=jdbc:postgresql://localhost:5432/apd
apd.datasource.username=postgres_user_test
apd.datasource.password=postgres_pwd_test
apd.datasource.type=org.postgresql.xa.PGXADataSource
apd.datasource.schema=apd

odp.datasource.url=jdbc:postgresql://localhost:5432/apd
odp.datasource.username=postgres_user_test
odp.datasource.password=postgres_pwd_test
odp.datasource.type=org.postgresql.xa.PGXADataSource
odp.datasource.schema=odp

server.port=8085

#spring.datasource.type=org.springframework.jdbc.datasource.SimpleDriverDataSource

# Hibernate ddl auto (create, create-drop, validate, update)
atomikos.hibernate.ddl-auto=true
atomikos.hibernate.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true

# Scheduling configuration
cron.job.schedule.enabled=true
cron.job.schedule.expression.valid.status=*/35 * * * * *
cron.job.schedule.expression.expired.status=*/35 * * * * *

cron.job.schedule.history.enabled=false
cron.job.schedule.history.trigger=*/55 * * * * *
cron.job.schedule.history.query =SELECT pp FROM PaymentPosition pp WHERE pp.status IN ('PAID', 'REPORTED', 'INVALID', 'EXPIRED') AND pp.lastUpdatedDate < ?1
cron.job.schedule.history.paginated = true
# The number of records extracted each time the query runs. The parameter is used only if pagination mode is true (default 100.000)
cron.job.schedule.history.query.page.size = 5
# The query to get the number of total records to be extracted in paginated mode. The parameter is used only if pagination mode is true
cron.job.schedule.history.query.count = SELECT count(pp.id) FROM PaymentPosition pp WHERE pp.status IN ('PAID', 'REPORTED', 'INVALID', 'EXPIRED') AND pp.lastUpdatedDate < ?1
# The time, in days, to be subtracted from the current date to decide how old, the debt positions to be historicized, must be (default 365 days)
cron.job.schedule.history.query.interval=0

cron.job.schedule.history.shedlock.defaultlockatmostfor = 10s
cron.job.schedule.history.shedlock.lockatmostfor = 10s
cron.job.schedule.history.shedlock.lockatleastfor = 1s

azure.archive.storage.connection=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;
azure.archive.storage.table.pp=paymentpositiontable

# Flyway settings 
spring.flyway.schemas=apd
spring.flyway.url=jdbc:postgresql://localhost:5432/apd
spring.flyway.password=postgres_user_test
spring.flyway.user=postgres_pwd_test

# Client and Feign settings
service.node.host=https://api.dev.platform.pagopa.it
service.check.position.path=/nodo/nodo-per-pm/v1/checkPosition
node.subscription-key=subkey
feign.client.config.default.connect-timeout=1000
feign.client.config.default.read-timeout=1000

# Retry settings
retry.maxAttempts=1
retry.maxDelay=500

logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# hikari pool
logging.level.com.zaxxer.hikari.HikariConfig=INFO
logging.level.com.zaxxer.hikari=INFO
